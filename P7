import requests
from datetime import datetime, date
import sys

BASE_URL = "http://127.0.0.1:8013"

def input_date(prompt):
    while True:
        try:
            value = input(prompt)
            booking_date = datetime.strptime(value, "%Y-%m-%d").date()
            if booking_date < date.today():
                print("Booking date cannot be a past date.")
            else:
                return str(booking_date)
        except ValueError:
            print("Please enter date in YYYY-MM-DD format.")

def add_booking():
    print("\n--- Add Service Booking ---")
    name = input("Enter customer name: ")
    vehicle = input("Enter vehicle number: ")
    service = input("Enter service type: ")
    booking_date = input_date("Enter booking date (YYYY-MM-DD): ")

    data = {
        "customer_name": name,
        "vehicle_number": vehicle,
        "service_type": service,
        "booking_date": booking_date
    }

    response = requests.post(f"{BASE_URL}/bookings", json=data)
    if response.status_code == 201:
        print("Booking added successfully.")
        print(response.json())
    else:
        print("Error:", response.json())

def view_all_bookings():
    print("\n--- All Bookings ---")
    response = requests.get(f"{BASE_URL}/bookings")
    if response.status_code == 200:
        bookings = response.json()
        if not bookings:
            print("No bookings found.")
        for b in bookings:
            print(b)
    else:
        print("Error:", response.json())

def get_booking_by_id():
    print("\n--- Get Booking By ID ---")
    booking_id = input("Enter booking ID: ")
    response = requests.get(f"{BASE_URL}/bookings/{booking_id}")
    if response.status_code == 200:
        print(response.json())
    else:
        print("Error:", response.json())

def update_booking():
    print("\n--- Update Booking ---")
    booking_id = input("Enter booking ID to update: ")
    print("Leave field blank to skip updating it.")
    name = input("New customer name: ")
    vehicle = input("New vehicle number: ")
    service = input("New service type: ")
    
    booking_date = input("New booking date (YYYY-MM-DD): ")
    booking_date = booking_date.strip()
    if booking_date:
        try:
            dt = datetime.strptime(booking_date, "%Y-%m-%d").date()
            if dt < date.today():
                print("Booking date cannot be a past date.")
                return
        except ValueError:
            print("Invalid date format.")
            return

    update_data = {}
    if name: update_data["customer_name"] = name
    if vehicle: update_data["vehicle_number"] = vehicle
    if service: update_data["service_type"] = service
    if booking_date: update_data["booking_date"] = booking_date

    if not update_data:
        print("No data to update.")
        return

    response = requests.put(f"{BASE_URL}/bookings/{booking_id}", json=update_data)
    if response.status_code == 200:
        print("Booking updated successfully.")
        print(response.json())
    else:
        print("Error:", response.json())

def delete_booking():
    print("\n--- Delete Booking ---")
    booking_id = input("Enter booking ID to delete: ")
    response = requests.delete(f"{BASE_URL}/bookings/{booking_id}")
    if response.status_code == 204:
        print("Booking deleted successfully.")
    else:
        print("Error:", response.json())

def main():
    while True:
        print("\nVehicle Service Booking System")
        print("1. Add booking")
        print("2. View all bookings")
        print("3. Get booking by ID")
        print("4. Update booking")
        print("5. Delete booking")
        print("6. Exit")

        choice = input("Choose an option (1-6): ")

        if choice == "1":
            add_booking()
        elif choice == "2":
            view_all_bookings()
        elif choice == "3":
            get_booking_by_id()
        elif choice == "4":
            update_booking()
        elif choice == "5":
            delete_booking()
        elif choice == "6":
            print("Exiting...")
            sys.exit()
        else:
            print("Invalid choice. Please choose between 1-6.")

if __name__ == "__main__":
    main()
